trigger:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string
  tags:
    include:
    - 'v*'

pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

jobs:
- job: 'WebAssembly'
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: yarn
      displayName: "Install Deps"
      env:
        PSP_DOCKER: 1

    - bash: yarn build_js --ci
      displayName: "Build"
      env:
        PSP_DOCKER: 1

    - bash: yarn test_js --quiet --ci
      displayName: "Test"
      env:
        PSP_DOCKER: 1

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: 'junit.xml'

- job: 'Linux'
  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      Python27ManyLinux2010:
        python.version: '2.7'
        python_flag: '--python2'
        manylinux_flag: '--manylinux2010'
        artifact_name: 'cp27-cp27m-manylinux2010_x86_64'
      Python37ManyLinux2010:
        python.version: '3.7'
        python_flag: ''
        manylinux_flag: '--manylinux2010'
        artifact_name: 'cp37-cp37m-manylinux2010_x86_64'

      ${{ if startsWith(variables['build.sourceBranch'], 'refs/tags/v') }}:
        Python36ManyLinux2010:
          python.version: '3.6'
          python_flag: '--python36'
          manylinux_flag: '--manylinux2010'
          artifact_name: 'cp36-cp36m-manylinux2010_x86_64'
        Python36ManyLinux2014:
          python.version: '3.6'
          python_flag: '--python36'
          manylinux_flag: '--manylinux2014'
          artifact_name: 'cp36-cp36m-manylinux2014_x86_64'
        # Python37ManyLinux2010 is always built
        Python37ManyLinux2014:
          python.version: '3.7'
          python_flag: ''
          manylinux_flag: '--manylinux2014'
          artifact_name: 'cp37-cp37m-manylinux2014_x86_64'
        Python38ManyLinux2010:
          python.version: '3.8'
          python_flag: '--python38'
          manylinux_flag: '--manylinux2010'
          artifact_name: 'cp38-cp38-manylinux2010_x86_64'
        Python38ManyLinux2014:
          python.version: '3.8'
          python_flag: '--python38'
          manylinux_flag: '--manylinux2014'
          artifact_name: 'cp38-cp38-manylinux2014_x86_64'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: yarn
      displayName: 'Install Deps'

    - ${{ if not(eq(variables['python.version'], '2.7')) }}:

      - script: |
          python -m pip install "black==20.8b1" flake8-black"
        displayName: "Install Python3 deps"

    - bash: yarn build_python --ci $(python_flag) $(manylinux_flag)
      displayName: 'build'
      env:
        PSP_DOCKER: 1

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python/perspective/python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'

    # Build a python wheel for Manylinux
    - bash: yarn _wheel_python --ci $(python_flag) $(manylinux_flag)
      condition: and(succeeded(), ne(variables['manylinux_flag'], ''))
      displayName: 'Build Manylinux Wheel'
      env:
        PSP_DOCKER: 1

    # Test the wheel
    - bash: cd $(System.DefaultWorkingDirectory)/python/perspective/scripts && ./test_wheels.sh $(python_flag) $(manylinux_flag)
      condition: and(succeeded(), ne(variables['manylinux_flag'], ''))
      displayName: 'Test Manylinux Wheel'

    # Save the artifact to Azure storage
    - task: PublishPipelineArtifact@1
      condition: and(succeeded(), ne(variables['manylinux_flag'], ''))
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/python/perspective/wheelhouse/'
        artifactName: '$(artifact_name)'

# - job: 'Windows'
#   pool:
#     vmImage: 'vs2017-win2016'

#   strategy:
#     matrix:
#       Python37:
#         python.version: '3.7'
#         python_flag: ''
#       ${{ if startsWith(variables['build.sourceBranch'], 'refs/tags/v') }}:
#         Python36:
#           python.version: '3.6'
#           python_flag: '--python36'
#         Python38:
#           python.version: '3.8'
#           python_flag: '--python38'

#   steps:
#     - task: UsePythonVersion@0
#       inputs:
#         versionSpec: '$(python.version)'
#         architecture: 'x64'

#     - task: NodeTool@0
#       inputs:
#         versionSpec: '12.x'

#     - script: |
#         which python > python.txt
#         set /p PYTHON=<python.txt
#         ln -s %PYTHON% %PYTHON%$(python.version)
#         python --version
#         which python$(python.version)
#       displayName: "Which python"

#     - script: |
#         python -m pip install numpy "pyarrow>=1.0.1,<2"
#       displayName: "Python deps"

#     - script: npm install -g yarn
#       displayName: "Install Yarn"

#     - script: yarn
#       displayName: 'Install Deps'

#     - script: yarn build_python  --ci $(python_flag)
#       displayName: 'build'
#       env:
#         # Set `BOOST_ROOT` manually, as `BOOST_ROOT` is removed in the VM:
#         # https://github.com/actions/virtual-environments/issues/687
#         # 06/18/2020 - seems like boost got moved to `x86_64` inside
#         # the boost folder, which broke builds for a bit.
#         BOOST_ROOT: "C:/hostedtoolcache/windows/Boost/1.69.0/x86_64/"
#         BOOST_INCLUDEDIR: "C:/hostedtoolcache/windows/Boost/1.69.0/x86_64/include"
#         BOOST_LIBRARYDIR: "C:/hostedtoolcache/windows/Boost/1.69.0/x86_64/libs"

- job: 'MacOS_Mojave'
  pool:
    vmImage: 'macos-10.14'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        python_flag: ''
        artifact_name: 'cp37-cp37m-macosx_10_14_x86_64'

      ${{ if startsWith(variables['build.sourceBranch'], 'refs/tags/v') }}:
        Python27:
          python.version: '2.7'
          python_flag: '--python2'
          artifact_name: 'cp27-cp27m-macosx_10_14_x86_64'

        Python36:
          python.version: '3.6'
          python_flag: '--python36'
          artifact_name: 'cp36-cp36m-macosx_10_14_x86_64'

        Python38:
          python.version: '3.8'
          python_flag: '--python38'
          artifact_name: 'cp38-cp38-macosx_10_14_x86_64'

  steps:
    # only build python37 if not a release
    - ${{ if or(startsWith(variables['build.sourceBranch'], 'refs/tags/v'), eq(variables['python_flag'], '')) }}:

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'

      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'

      - script: |
          brew install boost
        displayName: "System deps"

      - script: |
          which python
          python --version
          which python$(python.version)
        displayName: "Which python"

      - ${{ if not(eq(variables['python.version'], '2.7')) }}:

        - script: |
            python -m pip install delocate wheel numpy "black==20.8b1" flake8-black "pyarrow>=1.0.1,<2"
          displayName: "Python3 deps"
      
      - ${{ if eq(variables['python.version'], '2.7') }}:

        - script: |
            python -m pip install delocate wheel numpy "black==20.8b1" flake8-black "pyarrow<2"
          displayName: "Python2 deps"

      - script: npm install -g yarn
        displayName: "Install Yarn"

      - script: yarn
        displayName: 'Install Deps'

      - script: yarn build_python --ci $(python_flag)
        displayName: 'build'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: 'python/perspective/python_junit.xml'
          testRunTitle: 'Publish test results for Python $(python.version)'

      - task: PublishCodeCoverageResults@1
        inputs: 
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'

      # Build a python wheel for Mac 10.14
      - bash: yarn _wheel_python --ci $(python_flag) --macos
        displayName: 'Build wheel'

      # Test the wheel
      - bash: cd $(System.DefaultWorkingDirectory)/python/perspective/scripts && ./test_wheels.sh $(python_flag) --macos
        displayName: 'Test Mac Wheel'

      # Save the artifact to Azure storage
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/python/perspective/dist/'
          artifactName: '$(artifact_name)'

- job: 'MacOS_Catalina'
  pool:
    vmImage: 'macos-10.15'

  strategy:
    matrix:
      Python27:
        python.version: '2.7'
        python_flag: '--python2'
        artifact_name: 'cp27-cp27m-macosx_10_15_x86_64'

      Python37:
        python.version: '3.7'
        python_flag: ''
        artifact_name: 'cp37-cp37m-macosx_10_15_x86_64'

      ${{ if startsWith(variables['build.sourceBranch'], 'refs/tags/v') }}:
        Python36:
          python.version: '3.6'
          python_flag: '--python36'
          artifact_name: 'cp36-cp36m-macosx_10_15_x86_64'
  
        Python38:
          python.version: '3.8'
          python_flag: '--python38'
          artifact_name: 'cp38-cp38-macosx_10_15_x86_64'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - script: |
        brew install boost
      displayName: "System deps"

    - script: |
        which python
        python --version
        which python$(python.version)
      displayName: "Which python"

    - script: |
        python -m pip install delocate wheel numpy "pyarrow>=1.0.1,<2"
      displayName: "Python3 deps"
      condition: not(eq(variables['python.version'], '2.7'))
    
    - script: |
        python -m pip install delocate wheel numpy "pyarrow<2"
      displayName: "Python2 deps"
      condition: eq(variables['python.version'], '2.7')

    - script: npm install -g yarn
      displayName: "Install Yarn"

    - script: yarn --network-timeout 600000
      displayName: 'Install Deps'

    - script: yarn build_python --ci $(python_flag)
      displayName: 'build'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python/perspective/python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'

    # Build a python wheel for Mac 10.14
    - bash: yarn _wheel_python --ci $(python_flag) --macos
      displayName: 'Build wheel'

    # Test the wheel
    - bash: cd $(System.DefaultWorkingDirectory)/python/perspective/scripts && ./test_wheels.sh $(python_flag) --macos
      displayName: 'Test Mac Wheel'

    # Save the artifact to Azure storage
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/python/perspective/dist/'
        artifactName: '$(artifact_name)'